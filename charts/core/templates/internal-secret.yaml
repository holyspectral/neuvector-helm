{{- if .Values.autoGenerateCert }}
{{- $cn := "neuvector" }}
{{- $ca := genCA (printf "%s-internal-ca" "neuvector") (.Values.defaultValidityPeriod | int) -}}
{{- $cert := genSignedCert $cn nil (list $cn) (.Values.defaultValidityPeriod | int) $ca -}}
{{- $signingCert := genSignedCert $cn nil (list $cn) (.Values.defaultValidityPeriod | int) $ca -}}
{{- $defaultCA := (printf "%s\n%s" $ca.Cert (.Files.Get "legacyca.cert")) -}}
apiVersion: v1
kind: Secret
metadata:
  name: neuvector-internal-secret
type: Opaque
data:
  ca.cert: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-internal-secret" "key" "ca.cert" "defaultValue" $defaultCA) }}
  cert.key: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-internal-secret" "key" "cert.key" "defaultValue" $cert.Key) }}
  cert.pem: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-internal-secret" "key" "cert.pem" "defaultValue" $cert.Cert) }}
---
{{- end}}
