{{- if .Values.controller.enabled -}}
{{- if .Values.autoGenerateCert }}
{{- $cn := "neuvector" }}
{{- $ca := genCA (printf "%s-ca" "neuvector") (.Values.defaultValidityPeriod | int) -}}
{{- $cert := genSignedCert $cn nil (list $cn) (.Values.defaultValidityPeriod | int) $ca -}}
{{- $signingCert := genSignedCert $cn nil (list $cn) (.Values.defaultValidityPeriod | int) $ca -}}
apiVersion: v1
kind: Secret
metadata:
  name: neuvector-controller-secret
type: Opaque
data:
  ca.cert: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-controller-secret" "key" "ca.cert" "defaultValue" $ca.Cert) }}
  ssl-cert.key: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-controller-secret" "key" "ssl-cert.key" "defaultValue" $cert.Key) }}
  ssl-cert.pem: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-controller-secret" "key" "ssl-cert.pem" "defaultValue" $cert.Cert) }}
  jwt-signing.key: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-controller-secret" "key" "jwt-signing.key" "defaultValue" $signingCert.Key) }}
  jwt-signing.pem: {{ include "neuvector.secrets.lookup" (dict "namespace" .Release.Namespace "secret" "neuvector-controller-secret" "key" "jwt-signing.pem" "defaultValue" $signingCert.Cert) }}
---
{{- end}}
{{- end}}
